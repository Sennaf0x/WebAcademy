// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cliente {
  cpf             String     @id @db.VarChar(15)
  nome            String     @db.VarChar(100)
  celular         String?    @db.VarChar(20)
  email           String?    @db.VarChar(100)
  data_nascimento DateTime?  @db.Date
  enderecos       Endereco[]
  compras         Compra[]
}

model Endereco {
  id          Int     @id @default(autoincrement())
  cpf_cliente String  @db.VarChar(15)
  logradouro  String? @db.VarChar(100)
  numero      String? @db.VarChar(10)
  bairro      String? @db.VarChar(50)
  cidade      String? @db.VarChar(50)
  uf          String? @db.Char(2)
  cep         String? @db.VarChar(12)

  cliente      Cliente  @relation(fields: [cpf_cliente], references: [cpf])
  comprasEnvio Compra[]

  @@index([cpf_cliente])
}

model Categoria {
  id            Int            @id @default(autoincrement())
  nome          String?        @db.VarChar(50)
  subcategorias SubCategoria[]
  produtos      Produto[]
}

model SubCategoria {
  id           Int     @id @default(autoincrement())
  id_categoria Int
  nome         String? @db.VarChar(50)

  categoria Categoria @relation(fields: [id_categoria], references: [id])
  produtos  Produto[]

  @@index([id_categoria])
}

model Produto {
  id              Int             @id @default(autoincrement())
  id_categoria    Int?
  id_subcategoria Int?
  modelo          String?         @db.VarChar(50)
  fabricante      String?         @db.VarChar(50)
  preco_base      Decimal?        @db.Decimal(10, 2)
  quantidade      Int?
  categoria       Categoria?      @relation(fields: [id_categoria], references: [id])
  subcategoria    SubCategoria?   @relation(fields: [id_subcategoria], references: [id])
  numerosSerie    NumeroSerie[]
  compraProdutos  CompraProduto[]

  @@index([id_categoria])
  @@index([id_subcategoria])
}

model NumeroSerie {
  num_serie  String @id @db.VarChar(100)
  id_produto Int

  produto Produto @relation(fields: [id_produto], references: [id])

  @@index([id_produto])
}

model Compra {
  id              Int             @id @default(autoincrement())
  cpf_cliente     String          @db.VarChar(15)
  endereco_envio  Int
  data_hora       DateTime
  desconto        Decimal?        @db.Decimal(10, 2)
  forma_pagamento String?         @db.VarChar(50)
  total           Decimal?        @db.Decimal(12, 2)
  cliente         Cliente         @relation(fields: [cpf_cliente], references: [cpf])
  endereco        Endereco        @relation(fields: [endereco_envio], references: [id])
  itens           CompraProduto[]

  @@index([cpf_cliente])
  @@index([endereco_envio])
}

model CompraProduto {
  id_compra      Int
  id_produto     Int
  quantidade     Int?
  preco_unitario Decimal? @db.Decimal(10, 2)
  compra         Compra   @relation(fields: [id_compra], references: [id])
  produto        Produto  @relation(fields: [id_produto], references: [id])

  @@id([id_compra, id_produto])
  @@index([id_produto])
}
